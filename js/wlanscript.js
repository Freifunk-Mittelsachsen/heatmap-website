// Generated by CoffeeScript 1.9.3
(function() {
  var HMMap, WiFiData;

  WiFiData = (function() {
    function WiFiData(data1) {
      this.data = data1;
      this.parse(this.data);
    }

    WiFiData.prototype.parse = function(data) {
      var csvparsed;
      csvparsed = Papa.parse(data).data;
      return this.wlandata = this.groupBy(csvparsed);
    };

    WiFiData.prototype.groupBy = function(inputArr) {
      var _this, items;
      items = {};
      _this = this;
      $.each(inputArr, function(index, val) {
        var key;
        key = val[11];
        if (key) {
          if (!items[key]) {
            items[key] = [];
          }
          items[String(key)].push(_this.formatData(val));
        }
      });
      return items;
    };

    WiFiData.prototype.formatData = function(val) {
      var net;
      return net = {
        bssid: val[12],
        ssid: val[11],
        count: parseInt(val[13]),
        lat: val[4],
        lng: val[5]
      };
    };

    return WiFiData;

  })();

  HMMap = (function() {
    function HMMap(wlandata) {
      this.wlandata = wlandata;
      this.initmap();
      return;
    }

    HMMap.prototype.setHeatMap = function(key) {
      var hmConfig;
      hmConfig = {
        max: -50,
        min: -99,
        data: this.wlandata[key]
      };
      this.heatmapLayer.setData(hmConfig);
    };

    HMMap.prototype.initmap = function(myheatmapdata) {
      var cfg;
      this.baseLayer = L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
        maxZoom: 18
      });
      cfg = {
        "radius": 15,
        "maxOpacity": .8,
        "scaleRadius": false,
        "useLocalExtrema": false,
        latField: 'lat',
        lngField: 'lng',
        valueField: 'count',
        blur: 1
      };
      this.heatmapLayer = new HeatmapOverlay(cfg);
      this.map = new L.Map('map-canvas', {
        center: new L.LatLng(51.07642, 13.0121),
        zoom: 17,
        layers: [this.baseLayer, this.heatmapLayer]
      });
    };

    return HMMap;

  })();

  window.onload = function() {
    return $.get("./wifilog.csv", function(data) {
      var key, map, netdata;
      netdata = new WiFiData(data);
      $.each(netdata.wlandata, function(key, value) {
        return $(".wlanselect").append("<option value=\"" + key + "\">" + key + "</option>");
      });
      window.wlanmap = map = new HMMap(netdata.wlandata);
      $('.wlanselect').on('change', function(event) {
        var key;
        key = $('.wlanselect option:selected').val();
        map.setHeatMap(key);
      });
      key = $('.wlanselect option:first').val();
      return map.setHeatMap(key);
    });
  };

}).call(this);
